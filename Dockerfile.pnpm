FROM debian:bookworm-slim@sha256:155280b00ee0133250f7159b567a07d7cd03b1645714c3a7458b2287b0ca83cb as base
ARG DEPENDENCIES="git ca-certificates zip wget"
RUN set -eux && \
    apt-get update -qq && \
    apt-get install -qq --no-install-recommends --no-install-suggests -y ${DEPENDENCIES} && \
    apt-get clean && rm -rf /var/cache/* /var/log/* /var/lib/apt/lists/* /tmp/* && \
    echo -n > ~/.bashrc && \
    echo 'alias ls="ls -lhA --color=auto"' >> ~/.bashrc

# üêü
FROM base as downloader
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ARG TARGETPLATFORM
ARG PNPM_VERSION
ARG NODE_VERSION

# > ÂÆâË£Ö pnpm
RUN if [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
    export ARCH="arm64"; \
    elif [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
    export ARCH="x64"; \
    fi && \
    mkdir -p /pnpm && \
    # https://github.com/pnpm/pnpm/releases
    wget -O /pnpm/pnpm "https://github.com/pnpm/pnpm/releases/download/v$PNPM_VERSION/pnpm-linuxstatic-$ARCH" && \
    chmod +x /pnpm/pnpm

# > ÂÆâË£Ö Node.js
RUN pnpm env use --global $NODE_VERSION && \
    pnpm --version && node --version && npm --version && \
    pnpm store prune --force && \
    rm -rf /pnpm/store && \
    echo "pnpm version: $(pnpm --version)"

# üêü
FROM base
WORKDIR /workspace
# https://pnpm.io/zh/docker
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH" DEBIAN_FRONTEND=noninteractive

COPY --from=downloader /pnpm /pnpm

RUN pnpm config set store-dir /opt/hostedtoolcache/pnpm-store
